"""1_create_tables

Revision ID: b8d6af63a427
Revises: 182514e6040b
Create Date: 2024-06-02 16:08:11.277899

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b8d6af63a427'
down_revision = '182514e6040b'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('celery_crontab_schedule',
    sa.Column('minute', sa.String(length=240), nullable=True),
    sa.Column('hour', sa.String(length=96), nullable=True),
    sa.Column('day_of_week', sa.String(length=64), nullable=True),
    sa.Column('day_of_month', sa.String(length=124), nullable=True),
    sa.Column('month_of_year', sa.String(length=64), nullable=True),
    sa.Column('timezone', sa.String(length=64), server_default=sa.text("'UTC'"), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('celery_interval_schedule',
    sa.Column('every', sa.Integer(), nullable=False),
    sa.Column('period', sa.String(length=24), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('every', 'period', name='uq_every_period')
    )
    op.create_table('celery_periodic_task_changed',
    sa.Column('last_update', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('celery_solar_schedule',
    sa.Column('event', sa.String(length=24), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('file_index',
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('content_type', sa.String(), nullable=True),
    sa.Column('file_storage_uuid', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('file_storage_uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('language',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('iso2', sa.String(length=2), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('level',
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('cefr_code', sa.String(length=2), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('user',
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('timezone', sa.String(length=10), server_default=sa.text("'UTC+3'::character varying"), nullable=False),
    sa.Column('telegram_id', sa.String(length=255), nullable=True),
    sa.Column('is_accepting_emails', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('is_accepting_interface_messages', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('is_accepting_telegram', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('roles', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::json"), nullable=False),
    sa.Column('external_uuid', sa.String(length=50), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_first_name'), 'user', ['first_name'], unique=False)
    op.create_index(op.f('ix_user_last_name'), 'user', ['last_name'], unique=False)
    op.create_table('celery_periodic_task',
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('task', sa.String(length=255), nullable=True),
    sa.Column('interval_id', sa.Integer(), nullable=True),
    sa.Column('crontab_id', sa.Integer(), nullable=True),
    sa.Column('solar_id', sa.Integer(), nullable=True),
    sa.Column('args', sa.Text(), server_default=sa.text("'[]'"), nullable=True),
    sa.Column('kwargs', sa.Text(), server_default=sa.text("'{}'"), nullable=True),
    sa.Column('queue', sa.String(length=255), nullable=True),
    sa.Column('exchange', sa.String(length=255), nullable=True),
    sa.Column('routing_key', sa.String(length=255), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('one_off', sa.Boolean(), server_default=sa.text('false'), nullable=True),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('enabled', sa.Boolean(), server_default=sa.text('true'), nullable=True),
    sa.Column('last_run_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total_run_count', sa.Integer(), nullable=False),
    sa.Column('date_changed', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('description', sa.Text(), server_default=sa.text("''"), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['crontab_id'], ['celery_crontab_schedule.id'], ),
    sa.ForeignKeyConstraint(['interval_id'], ['celery_interval_schedule.id'], ),
    sa.ForeignKeyConstraint(['solar_id'], ['celery_solar_schedule.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('grammar',
    sa.Column('name', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::json"), nullable=False),
    sa.Column('explanation', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::json"), nullable=False),
    sa.Column('examples', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::json"), nullable=False),
    sa.Column('language_uuid', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('level_uuid', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.ForeignKeyConstraint(['language_uuid'], ['language.uuid'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['level_uuid'], ['level.uuid'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_grammar_language_uuid'), 'grammar', ['language_uuid'], unique=False)
    op.create_index(op.f('ix_grammar_level_uuid'), 'grammar', ['level_uuid'], unique=False)
    op.create_table('phrase',
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('language_uuid', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('user_uuid', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['language_uuid'], ['language.uuid'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_phrase_language_uuid'), 'phrase', ['language_uuid'], unique=False)
    op.create_table('text',
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('level_uuid', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('language_uuid', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('user_uuid', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['language_uuid'], ['language.uuid'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['level_uuid'], ['level.uuid'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('word',
    sa.Column('characters', sa.String(length=50), nullable=False),
    sa.Column('language_uuid', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('level_uuid', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.ForeignKeyConstraint(['language_uuid'], ['language.uuid'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['level_uuid'], ['level.uuid'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_word_language_uuid'), 'word', ['language_uuid'], unique=False)
    op.create_index(op.f('ix_word_level_uuid'), 'word', ['level_uuid'], unique=False)
    op.create_table('user_text_status',
    sa.Column('user_uuid', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('text_uuid', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('status', sa.String(length=10), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['text_uuid'], ['text.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_uuid', 'text_uuid', 'status', name='unique_user_uuid_text_uuid_status')
    )
    op.create_index(op.f('ix_user_text_status_status'), 'user_text_status', ['status'], unique=False)
    op.create_index(op.f('ix_user_text_status_text_uuid'), 'user_text_status', ['text_uuid'], unique=False)
    op.create_table('user_word_status_file',
    sa.Column('user_uuid', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('word_uuid', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('status', sa.String(length=10), nullable=True),
    sa.Column('file_index_uuid', sa.UUID(as_uuid=False), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['file_index_uuid'], ['file_index.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['word_uuid'], ['word.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_uuid', 'word_uuid', 'status', 'file_index_uuid', name='unique_user_uuid_word_uuid_status_file_index_uuid')
    )
    op.create_index(op.f('ix_user_word_status_file_file_index_uuid'), 'user_word_status_file', ['file_index_uuid'], unique=False)
    op.create_index(op.f('ix_user_word_status_file_status'), 'user_word_status_file', ['status'], unique=False)
    op.create_index(op.f('ix_user_word_status_file_word_uuid'), 'user_word_status_file', ['word_uuid'], unique=False)
    op.create_table('word_translation',
    sa.Column('word_uuid_original', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('word_uuid_translated', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('popularity_count', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.ForeignKeyConstraint(['word_uuid_original'], ['word.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['word_uuid_translated'], ['word.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_index(op.f('ix_word_translation_word_uuid_original'), 'word_translation', ['word_uuid_original'], unique=False)
    op.create_index(op.f('ix_word_translation_word_uuid_translated'), 'word_translation', ['word_uuid_translated'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_word_translation_word_uuid_translated'), table_name='word_translation')
    op.drop_index(op.f('ix_word_translation_word_uuid_original'), table_name='word_translation')
    op.drop_table('word_translation')
    op.drop_index(op.f('ix_user_word_status_file_word_uuid'), table_name='user_word_status_file')
    op.drop_index(op.f('ix_user_word_status_file_status'), table_name='user_word_status_file')
    op.drop_index(op.f('ix_user_word_status_file_file_index_uuid'), table_name='user_word_status_file')
    op.drop_table('user_word_status_file')
    op.drop_index(op.f('ix_user_text_status_text_uuid'), table_name='user_text_status')
    op.drop_index(op.f('ix_user_text_status_status'), table_name='user_text_status')
    op.drop_table('user_text_status')
    op.drop_index(op.f('ix_word_level_uuid'), table_name='word')
    op.drop_index(op.f('ix_word_language_uuid'), table_name='word')
    op.drop_table('word')
    op.drop_table('text')
    op.drop_index(op.f('ix_phrase_language_uuid'), table_name='phrase')
    op.drop_table('phrase')
    op.drop_index(op.f('ix_grammar_level_uuid'), table_name='grammar')
    op.drop_index(op.f('ix_grammar_language_uuid'), table_name='grammar')
    op.drop_table('grammar')
    op.drop_table('celery_periodic_task')
    op.drop_index(op.f('ix_user_last_name'), table_name='user')
    op.drop_index(op.f('ix_user_first_name'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('level')
    op.drop_table('language')
    op.drop_table('file_index')
    op.drop_table('celery_solar_schedule')
    op.drop_table('celery_periodic_task_changed')
    op.drop_table('celery_interval_schedule')
    op.drop_table('celery_crontab_schedule')
    # ### end Alembic commands ###
